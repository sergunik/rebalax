services:
  app:
    build:
      context: .
      dockerfile: docker/php82/Dockerfile
    container_name: rebalax-app
    environment:
        - DD_TRACE_ENABLED=true
        - DD_ENV=prod
        - DD_AGENT_HOST=dd-agent
        - DD_SERVICE=rebalax-app
        - DD_VERSION=1.0.0
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    depends_on:
      - db
    command: [ "/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf" ]
    networks:
      - rebalax

  nginx:
    image: nginx:alpine
    container_name: rebalax-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d/
    networks:
      - rebalax

  db:
    image: postgres:15-alpine
    container_name: rebalax-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: $DB_DATABASE
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rebalax

  grafana:
    image: grafana/grafana-oss:latest
    container_name: rebalax-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_LOCALE: en-US
      LANG: en_US.UTF-8
      LANGUAGE: en_US:en
    networks:
      - rebalax

  prometheus:
    image: prom/prometheus:latest
    container_name: rebalax-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - app
    networks:
      - rebalax

  redis:
    image: redis:alpine
    container_name: rebalax-redis
    restart: unless-stopped
    networks:
      - rebalax

  dd-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: rebalax-dd-agent
    restart: unless-stopped
    environment:
      - DD_API_KEY=${DATADOG_API_KEY}
      - DD_SITE=us5.datadoghq.com
      - DD_ENV=prod
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_CONTAINER_EXCLUDE=name:dd-agent
      - DD_PROCESS_AGENT_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/datadog:/var/run/datadog
    networks:
      - rebalax

networks:
  rebalax:
    driver: bridge

volumes:
  dbdata:
  grafana-storage:
